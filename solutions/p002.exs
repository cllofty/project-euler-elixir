# Each new term in the Fibonacci sequence is generated by adding the previous
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.

defmodule Fib do
  def sumeven(first, second, accumlator) when (second < 4000000) do
    case { rem(second, 2) } do
      {0} -> sumeven(second, second+first, accumlator+second)
      {_} -> sumeven(second, second+first, accumlator)
    end
  end

  def sumeven(_, _, accumlator) do
    accumlator
  end
end

sum = Fib.sumeven(1, 2, 0)

IO.puts(sum)
